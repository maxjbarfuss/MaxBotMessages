// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StandardTypes.proto

#ifndef PROTOBUF_StandardTypes_2eproto__INCLUDED
#define PROTOBUF_StandardTypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Stamp.pb.h"
// @@protoc_insertion_point(includes)

namespace MaxBotMessages {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_StandardTypes_2eproto();
void protobuf_AssignDesc_StandardTypes_2eproto();
void protobuf_ShutdownFile_StandardTypes_2eproto();

class Double;
class DoubleStamped;
class Int;
class IntStamped;
class String;
class StringStamped;

// ===================================================================

class Int : public ::google::protobuf::Message {
 public:
  Int();
  virtual ~Int();

  Int(const Int& from);

  inline Int& operator=(const Int& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Int& default_instance();

  void Swap(Int* other);

  // implements Message ----------------------------------------------

  inline Int* New() const { return New(NULL); }

  Int* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Int& from);
  void MergeFrom(const Int& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Int* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MaxBotMessages.Int)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 value_;
  friend void  protobuf_AddDesc_StandardTypes_2eproto();
  friend void protobuf_AssignDesc_StandardTypes_2eproto();
  friend void protobuf_ShutdownFile_StandardTypes_2eproto();

  void InitAsDefaultInstance();
  static Int* default_instance_;
};
// -------------------------------------------------------------------

class Double : public ::google::protobuf::Message {
 public:
  Double();
  virtual ~Double();

  Double(const Double& from);

  inline Double& operator=(const Double& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Double& default_instance();

  void Swap(Double* other);

  // implements Message ----------------------------------------------

  inline Double* New() const { return New(NULL); }

  Double* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Double& from);
  void MergeFrom(const Double& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:MaxBotMessages.Double)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double value_;
  friend void  protobuf_AddDesc_StandardTypes_2eproto();
  friend void protobuf_AssignDesc_StandardTypes_2eproto();
  friend void protobuf_ShutdownFile_StandardTypes_2eproto();

  void InitAsDefaultInstance();
  static Double* default_instance_;
};
// -------------------------------------------------------------------

class String : public ::google::protobuf::Message {
 public:
  String();
  virtual ~String();

  String(const String& from);

  inline String& operator=(const String& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const String& default_instance();

  void Swap(String* other);

  // implements Message ----------------------------------------------

  inline String* New() const { return New(NULL); }

  String* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const String& from);
  void MergeFrom(const String& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(String* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:MaxBotMessages.String)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_StandardTypes_2eproto();
  friend void protobuf_AssignDesc_StandardTypes_2eproto();
  friend void protobuf_ShutdownFile_StandardTypes_2eproto();

  void InitAsDefaultInstance();
  static String* default_instance_;
};
// -------------------------------------------------------------------

class IntStamped : public ::google::protobuf::Message {
 public:
  IntStamped();
  virtual ~IntStamped();

  IntStamped(const IntStamped& from);

  inline IntStamped& operator=(const IntStamped& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IntStamped& default_instance();

  void Swap(IntStamped* other);

  // implements Message ----------------------------------------------

  inline IntStamped* New() const { return New(NULL); }

  IntStamped* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IntStamped& from);
  void MergeFrom(const IntStamped& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IntStamped* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MaxBotMessages.Stamp stamp = 1;
  bool has_stamp() const;
  void clear_stamp();
  static const int kStampFieldNumber = 1;
  const ::MaxBotMessages::Stamp& stamp() const;
  ::MaxBotMessages::Stamp* mutable_stamp();
  ::MaxBotMessages::Stamp* release_stamp();
  void set_allocated_stamp(::MaxBotMessages::Stamp* stamp);

  // required .MaxBotMessages.Int int = 2;
  bool has_int_() const;
  void clear_int_();
  static const int kIntFieldNumber = 2;
  const ::MaxBotMessages::Int& int_() const;
  ::MaxBotMessages::Int* mutable_int_();
  ::MaxBotMessages::Int* release_int_();
  void set_allocated_int_(::MaxBotMessages::Int* int_);

  // @@protoc_insertion_point(class_scope:MaxBotMessages.IntStamped)
 private:
  inline void set_has_stamp();
  inline void clear_has_stamp();
  inline void set_has_int_();
  inline void clear_has_int_();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MaxBotMessages::Stamp* stamp_;
  ::MaxBotMessages::Int* int__;
  friend void  protobuf_AddDesc_StandardTypes_2eproto();
  friend void protobuf_AssignDesc_StandardTypes_2eproto();
  friend void protobuf_ShutdownFile_StandardTypes_2eproto();

  void InitAsDefaultInstance();
  static IntStamped* default_instance_;
};
// -------------------------------------------------------------------

class DoubleStamped : public ::google::protobuf::Message {
 public:
  DoubleStamped();
  virtual ~DoubleStamped();

  DoubleStamped(const DoubleStamped& from);

  inline DoubleStamped& operator=(const DoubleStamped& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleStamped& default_instance();

  void Swap(DoubleStamped* other);

  // implements Message ----------------------------------------------

  inline DoubleStamped* New() const { return New(NULL); }

  DoubleStamped* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DoubleStamped& from);
  void MergeFrom(const DoubleStamped& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DoubleStamped* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MaxBotMessages.Stamp stamp = 1;
  bool has_stamp() const;
  void clear_stamp();
  static const int kStampFieldNumber = 1;
  const ::MaxBotMessages::Stamp& stamp() const;
  ::MaxBotMessages::Stamp* mutable_stamp();
  ::MaxBotMessages::Stamp* release_stamp();
  void set_allocated_stamp(::MaxBotMessages::Stamp* stamp);

  // required .MaxBotMessages.Double double = 2;
  bool has_double_() const;
  void clear_double_();
  static const int kDoubleFieldNumber = 2;
  const ::MaxBotMessages::Double& double_() const;
  ::MaxBotMessages::Double* mutable_double_();
  ::MaxBotMessages::Double* release_double_();
  void set_allocated_double_(::MaxBotMessages::Double* double_);

  // @@protoc_insertion_point(class_scope:MaxBotMessages.DoubleStamped)
 private:
  inline void set_has_stamp();
  inline void clear_has_stamp();
  inline void set_has_double_();
  inline void clear_has_double_();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MaxBotMessages::Stamp* stamp_;
  ::MaxBotMessages::Double* double__;
  friend void  protobuf_AddDesc_StandardTypes_2eproto();
  friend void protobuf_AssignDesc_StandardTypes_2eproto();
  friend void protobuf_ShutdownFile_StandardTypes_2eproto();

  void InitAsDefaultInstance();
  static DoubleStamped* default_instance_;
};
// -------------------------------------------------------------------

class StringStamped : public ::google::protobuf::Message {
 public:
  StringStamped();
  virtual ~StringStamped();

  StringStamped(const StringStamped& from);

  inline StringStamped& operator=(const StringStamped& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringStamped& default_instance();

  void Swap(StringStamped* other);

  // implements Message ----------------------------------------------

  inline StringStamped* New() const { return New(NULL); }

  StringStamped* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringStamped& from);
  void MergeFrom(const StringStamped& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StringStamped* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MaxBotMessages.Stamp stamp = 1;
  bool has_stamp() const;
  void clear_stamp();
  static const int kStampFieldNumber = 1;
  const ::MaxBotMessages::Stamp& stamp() const;
  ::MaxBotMessages::Stamp* mutable_stamp();
  ::MaxBotMessages::Stamp* release_stamp();
  void set_allocated_stamp(::MaxBotMessages::Stamp* stamp);

  // required .MaxBotMessages.String string = 2;
  bool has_string() const;
  void clear_string();
  static const int kStringFieldNumber = 2;
  const ::MaxBotMessages::String& string() const;
  ::MaxBotMessages::String* mutable_string();
  ::MaxBotMessages::String* release_string();
  void set_allocated_string(::MaxBotMessages::String* string);

  // @@protoc_insertion_point(class_scope:MaxBotMessages.StringStamped)
 private:
  inline void set_has_stamp();
  inline void clear_has_stamp();
  inline void set_has_string();
  inline void clear_has_string();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::MaxBotMessages::Stamp* stamp_;
  ::MaxBotMessages::String* string_;
  friend void  protobuf_AddDesc_StandardTypes_2eproto();
  friend void protobuf_AssignDesc_StandardTypes_2eproto();
  friend void protobuf_ShutdownFile_StandardTypes_2eproto();

  void InitAsDefaultInstance();
  static StringStamped* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Int

// required int32 value = 1;
inline bool Int::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Int::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Int::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Int::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 Int::value() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.Int.value)
  return value_;
}
inline void Int::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:MaxBotMessages.Int.value)
}

// -------------------------------------------------------------------

// Double

// required double value = 1;
inline bool Double::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Double::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Double::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Double::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double Double::value() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.Double.value)
  return value_;
}
inline void Double::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:MaxBotMessages.Double.value)
}

// -------------------------------------------------------------------

// String

// required string value = 1;
inline bool String::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void String::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void String::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void String::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& String::value() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.String.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void String::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MaxBotMessages.String.value)
}
inline void String::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MaxBotMessages.String.value)
}
inline void String::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MaxBotMessages.String.value)
}
inline ::std::string* String::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:MaxBotMessages.String.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* String::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void String::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:MaxBotMessages.String.value)
}

// -------------------------------------------------------------------

// IntStamped

// required .MaxBotMessages.Stamp stamp = 1;
inline bool IntStamped::has_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IntStamped::set_has_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IntStamped::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IntStamped::clear_stamp() {
  if (stamp_ != NULL) stamp_->::MaxBotMessages::Stamp::Clear();
  clear_has_stamp();
}
inline const ::MaxBotMessages::Stamp& IntStamped::stamp() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.IntStamped.stamp)
  return stamp_ != NULL ? *stamp_ : *default_instance_->stamp_;
}
inline ::MaxBotMessages::Stamp* IntStamped::mutable_stamp() {
  set_has_stamp();
  if (stamp_ == NULL) {
    stamp_ = new ::MaxBotMessages::Stamp;
  }
  // @@protoc_insertion_point(field_mutable:MaxBotMessages.IntStamped.stamp)
  return stamp_;
}
inline ::MaxBotMessages::Stamp* IntStamped::release_stamp() {
  clear_has_stamp();
  ::MaxBotMessages::Stamp* temp = stamp_;
  stamp_ = NULL;
  return temp;
}
inline void IntStamped::set_allocated_stamp(::MaxBotMessages::Stamp* stamp) {
  delete stamp_;
  stamp_ = stamp;
  if (stamp) {
    set_has_stamp();
  } else {
    clear_has_stamp();
  }
  // @@protoc_insertion_point(field_set_allocated:MaxBotMessages.IntStamped.stamp)
}

// required .MaxBotMessages.Int int = 2;
inline bool IntStamped::has_int_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IntStamped::set_has_int_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IntStamped::clear_has_int_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IntStamped::clear_int_() {
  if (int__ != NULL) int__->::MaxBotMessages::Int::Clear();
  clear_has_int_();
}
inline const ::MaxBotMessages::Int& IntStamped::int_() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.IntStamped.int)
  return int__ != NULL ? *int__ : *default_instance_->int__;
}
inline ::MaxBotMessages::Int* IntStamped::mutable_int_() {
  set_has_int_();
  if (int__ == NULL) {
    int__ = new ::MaxBotMessages::Int;
  }
  // @@protoc_insertion_point(field_mutable:MaxBotMessages.IntStamped.int)
  return int__;
}
inline ::MaxBotMessages::Int* IntStamped::release_int_() {
  clear_has_int_();
  ::MaxBotMessages::Int* temp = int__;
  int__ = NULL;
  return temp;
}
inline void IntStamped::set_allocated_int_(::MaxBotMessages::Int* int_) {
  delete int__;
  int__ = int_;
  if (int_) {
    set_has_int_();
  } else {
    clear_has_int_();
  }
  // @@protoc_insertion_point(field_set_allocated:MaxBotMessages.IntStamped.int)
}

// -------------------------------------------------------------------

// DoubleStamped

// required .MaxBotMessages.Stamp stamp = 1;
inline bool DoubleStamped::has_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DoubleStamped::set_has_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DoubleStamped::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DoubleStamped::clear_stamp() {
  if (stamp_ != NULL) stamp_->::MaxBotMessages::Stamp::Clear();
  clear_has_stamp();
}
inline const ::MaxBotMessages::Stamp& DoubleStamped::stamp() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.DoubleStamped.stamp)
  return stamp_ != NULL ? *stamp_ : *default_instance_->stamp_;
}
inline ::MaxBotMessages::Stamp* DoubleStamped::mutable_stamp() {
  set_has_stamp();
  if (stamp_ == NULL) {
    stamp_ = new ::MaxBotMessages::Stamp;
  }
  // @@protoc_insertion_point(field_mutable:MaxBotMessages.DoubleStamped.stamp)
  return stamp_;
}
inline ::MaxBotMessages::Stamp* DoubleStamped::release_stamp() {
  clear_has_stamp();
  ::MaxBotMessages::Stamp* temp = stamp_;
  stamp_ = NULL;
  return temp;
}
inline void DoubleStamped::set_allocated_stamp(::MaxBotMessages::Stamp* stamp) {
  delete stamp_;
  stamp_ = stamp;
  if (stamp) {
    set_has_stamp();
  } else {
    clear_has_stamp();
  }
  // @@protoc_insertion_point(field_set_allocated:MaxBotMessages.DoubleStamped.stamp)
}

// required .MaxBotMessages.Double double = 2;
inline bool DoubleStamped::has_double_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DoubleStamped::set_has_double_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DoubleStamped::clear_has_double_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DoubleStamped::clear_double_() {
  if (double__ != NULL) double__->::MaxBotMessages::Double::Clear();
  clear_has_double_();
}
inline const ::MaxBotMessages::Double& DoubleStamped::double_() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.DoubleStamped.double)
  return double__ != NULL ? *double__ : *default_instance_->double__;
}
inline ::MaxBotMessages::Double* DoubleStamped::mutable_double_() {
  set_has_double_();
  if (double__ == NULL) {
    double__ = new ::MaxBotMessages::Double;
  }
  // @@protoc_insertion_point(field_mutable:MaxBotMessages.DoubleStamped.double)
  return double__;
}
inline ::MaxBotMessages::Double* DoubleStamped::release_double_() {
  clear_has_double_();
  ::MaxBotMessages::Double* temp = double__;
  double__ = NULL;
  return temp;
}
inline void DoubleStamped::set_allocated_double_(::MaxBotMessages::Double* double_) {
  delete double__;
  double__ = double_;
  if (double_) {
    set_has_double_();
  } else {
    clear_has_double_();
  }
  // @@protoc_insertion_point(field_set_allocated:MaxBotMessages.DoubleStamped.double)
}

// -------------------------------------------------------------------

// StringStamped

// required .MaxBotMessages.Stamp stamp = 1;
inline bool StringStamped::has_stamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringStamped::set_has_stamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringStamped::clear_has_stamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringStamped::clear_stamp() {
  if (stamp_ != NULL) stamp_->::MaxBotMessages::Stamp::Clear();
  clear_has_stamp();
}
inline const ::MaxBotMessages::Stamp& StringStamped::stamp() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.StringStamped.stamp)
  return stamp_ != NULL ? *stamp_ : *default_instance_->stamp_;
}
inline ::MaxBotMessages::Stamp* StringStamped::mutable_stamp() {
  set_has_stamp();
  if (stamp_ == NULL) {
    stamp_ = new ::MaxBotMessages::Stamp;
  }
  // @@protoc_insertion_point(field_mutable:MaxBotMessages.StringStamped.stamp)
  return stamp_;
}
inline ::MaxBotMessages::Stamp* StringStamped::release_stamp() {
  clear_has_stamp();
  ::MaxBotMessages::Stamp* temp = stamp_;
  stamp_ = NULL;
  return temp;
}
inline void StringStamped::set_allocated_stamp(::MaxBotMessages::Stamp* stamp) {
  delete stamp_;
  stamp_ = stamp;
  if (stamp) {
    set_has_stamp();
  } else {
    clear_has_stamp();
  }
  // @@protoc_insertion_point(field_set_allocated:MaxBotMessages.StringStamped.stamp)
}

// required .MaxBotMessages.String string = 2;
inline bool StringStamped::has_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringStamped::set_has_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StringStamped::clear_has_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StringStamped::clear_string() {
  if (string_ != NULL) string_->::MaxBotMessages::String::Clear();
  clear_has_string();
}
inline const ::MaxBotMessages::String& StringStamped::string() const {
  // @@protoc_insertion_point(field_get:MaxBotMessages.StringStamped.string)
  return string_ != NULL ? *string_ : *default_instance_->string_;
}
inline ::MaxBotMessages::String* StringStamped::mutable_string() {
  set_has_string();
  if (string_ == NULL) {
    string_ = new ::MaxBotMessages::String;
  }
  // @@protoc_insertion_point(field_mutable:MaxBotMessages.StringStamped.string)
  return string_;
}
inline ::MaxBotMessages::String* StringStamped::release_string() {
  clear_has_string();
  ::MaxBotMessages::String* temp = string_;
  string_ = NULL;
  return temp;
}
inline void StringStamped::set_allocated_string(::MaxBotMessages::String* string) {
  delete string_;
  string_ = string;
  if (string) {
    set_has_string();
  } else {
    clear_has_string();
  }
  // @@protoc_insertion_point(field_set_allocated:MaxBotMessages.StringStamped.string)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace MaxBotMessages

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_StandardTypes_2eproto__INCLUDED
